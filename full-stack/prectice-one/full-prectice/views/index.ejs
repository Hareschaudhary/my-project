<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>User Table</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>

  <div class="container mt-5">
    <!-- Top bar with Search and Add Button -->
    <div class="d-flex justify-content-between mb-3">
      <input type="text" class="form-control w-50" placeholder="Search users..." id="searchInput">
      <button class="btn btn-primary ms-3" type="button" data-bs-toggle="modal" data-bs-target="#userModal"
        id="sdd-user-btn">Add User</button>
    </div>

    <!-- Table -->
    <table class="table table-bordered table-striped">
      <thead class="table-dark">
        <tr>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Email</th>
          <th>Phone Number</th>
          <th>Gender</th>
          <th>Profile Pic</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="userTableBody">
        <!-- Add more rows as needed -->
      </tbody>
    </table>
       <nav aria-label="Page navigation">
              <nav aria-label="...">
                <ul class="pagination justify-content-center" id="paginaction">
                </ul>
              </nav>
            </nav>
  </div>

  <!-- add user model -->

  <div class="modal fade" id="AddUserModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">

        <div class="modal-header">
          <h5 class="modal-title" id="userModalLabel">Add New User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <form id="AddUserForm" enctype="multipart/form-data">
          <div class="modal-body">
            <!-- First Name -->
            <div class="mb-3">
              <label for="firstName" class="form-label">First Name</label>
              <input type="text" name="first_name" class="form-control" id="firstName" required>
            </div>

            <!-- Last Name -->
            <div class="mb-3">
              <label for="lastName" class="form-label">Last Name</label>
              <input type="text" name="last_name" class="form-control" id="lastName" required>
            </div>

            <!-- Email -->
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="email" name="email" class="form-control" id="email" required>
            </div>

            <!-- Phone -->
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input type="tel" name="phone" class="form-control" id="phone" required>
            </div>

            <!-- Gender -->
            <div class="mb-3">
              <label for="gender" class="form-label">Gender</label>
              <select class="form-select" id="gender" name="gender" required>
                <option selected disabled value="">Choose...</option>
                <option value="Male">Male</option>
                <option value="Female">Female</option>
                <option value="Other">Other</option>
              </select>
            </div>

            <!-- Profile Picture -->
            <div class="mb-3">
              <label for="profilePic" class="form-label">Profile Picture</label>
              <input type="file" class="form-control" name="profile_pic" id="profilePic" accept="image/*">
            </div>
          </div>

          <!-- Modal Footer -->
          <div class="modal-footer">
            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          </div>
        </form>

      </div>
    </div>
  </div>

  <!-- View User Modal -->
  <div class="modal fade" id="viewUserModal" tabindex="-1" aria-labelledby="viewUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">

        <div class="modal-header">
          <h5 class="modal-title" id="viewUserModalLabel">User Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <div class="modal-body text-center">
          <!-- Profile Picture -->
          <img id="viewProfilePic" src="" alt="Profile Picture" class="rounded-circle mb-3" width="120" height="120">

          <!-- User Info -->
          <ul class="list-group text-start">
            <li class="list-group-item"><strong>First Name:</strong> <span id="viewFirstName"></span></li>
            <li class="list-group-item"><strong>Last Name:</strong> <span id="viewLastName"></span></li>
            <li class="list-group-item"><strong>Email:</strong> <span id="viewEmail"></span></li>
            <li class="list-group-item"><strong>Phone:</strong> <span id="viewPhone"></span></li>
            <li class="list-group-item"><strong>Gender:</strong> <span id="viewGender"></span></li>
          </ul>
        </div>

        <div class="modal-footer">
          <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>

      </div>
    </div>
  </div>

  <!-- Update User Modal -->
  <div class="modal fade" id="updateUserModal" tabindex="-1" aria-labelledby="updateUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">

        <div class="modal-header">
          <h5 class="modal-title" id="updateUserModalLabel">Update User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <form id="updateUserForm" enctype="multipart/form-data">
          <div class="modal-body">

            <!-- Hidden input for user ID -->
            <input type="hidden" id="updateUserId">

            <!-- First Name -->
            <div class="mb-3">
              <label for="updateFirstName" class="form-label">First Name</label>
              <input type="text" name="first_name" class="form-control" id="updateFirstName" required>
            </div>

            <!-- Last Name -->
            <div class="mb-3">
              <label for="updateLastName" class="form-label">Last Name</label>
              <input type="text" name="last_name" class="form-control" id="updateLastName" required>
            </div>

            <!-- Email -->
            <div class="mb-3">
              <label for="updateEmail" class="form-label">Email</label>
              <input type="email" name="email" class="form-control" id="updateEmail" required>
            </div>

            <!-- Phone -->
            <div class="mb-3">
              <label for="updatePhone" class="form-label">Phone</label>
              <input type="tel" name="phone" class="form-control" id="updatePhone" required>
            </div>

            <!-- Gender -->
            <div class="mb-3">
              <label for="updateGender" class="form-label">Gender</label>
              <select class="form-select" name="gender" id="updateGender" required>
                <option selected disabled value="">Choose...</option>
                <option value="Male">Male</option>
                <option value="Female">Female</option>
                <option value="Other">Other</option>
              </select>
            </div>

            <!-- Profile Picture -->
            <div class="mb-3">
              <label for="updateProfilePic" class="form-label">Profile Picture</label>
              <input type="file" name="profile_pic" class="form-control" id="updateProfilePic" accept="image/*">
            </div>

          </div>

          <!-- Modal Footer -->
          <div class="modal-footer">
            <button type="submit" class="btn btn-success">Update</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          </div>
        </form>

      </div>
    </div>
  </div>

  <!-- Optional: Bootstrap JS (for dropdowns or future use) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    const API_URL = 'http://localhost:3000/api/users'
          let currentPage = 1;
      let currentSearch = "";

    const FetchData = async (search = '',page = 1) => {
        currentPage = page;
        currentSearch = search;
        const limit = 5;
         const data = ''
      try {
        const res = await fetch(`${API_URL}/?search=${encodeURIComponent(search)}&page=${page}&limit=${limit}`)
        const data = await res.json()
        

        let TableBody = document.querySelector('#userTableBody')
        TableBody.innerHTML = ""

        data.allUserData.forEach((element, ind) => {
          TableBody.innerHTML += `
            <tr key="${ind}">
            <td>${element.first_name}</td>
            <td>${element.last_name}</td>
            <td>${element.email}</td>
            <td>${element.phone}</td>
            <td>${element.gender}</td>
            <td> <img src="/uploads/${element.profile_pic}" width="50" height="50" alt=""></td>
            <td>
          <button class="btn btn-info btn-sm"  onclick="ViewStudentData('${element._id}')">View</button>
          <button class="btn btn-warning btn-sm" onclick="EditStudentData('${element._id}')">Edit</button>
          <button class="btn btn-danger btn-sm" onclick="DeleteStudentData('${element._id}')">Delete</button>
            </td>
        </tr>
         `
          renderPagination(data.totalPages);
        });
       console.log('function reload')
      } catch (error) {
        console.log(error)
      }
       
    }

    FetchData()

        // paginaction
      function renderPagination(totalPages) {
        let container = document.querySelector("#paginaction");
        container.innerHTML = "";

        let preveli = document.createElement("li");
        preveli.className = "page-item" + ( currentPage == 1 ? " disabled" : "");
        preveli.innerHTML = `<a class="page-link" href="#">preve</a>`;
        preveli.addEventListener("click", (e) => {
            e.preventDefault();
            FetchData(currentSearch, currentPage - 1);
          });
          container.appendChild(preveli);

        for (let i = 1; i <= totalPages; i++) {
          const li = document.createElement("li");
          li.className = "page-item" + (i == currentPage ? " active" : "");
          li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
          li.addEventListener("click", (e) => {
            e.preventDefault();
            FetchData(currentSearch, i);
          });
          container.appendChild(li);
        }
        
        let nextli = document.createElement("li");
        nextli.className = "page-item" + ( currentPage == totalPages ? " disabled" : "");
        nextli.innerHTML = `<a class="page-link" href="#">next</a>`;
        nextli.addEventListener("click", (e) => {
            e.preventDefault();
            FetchData(currentSearch, currentPage + 1);
          });
          container.appendChild(nextli);
      }


    // add stutend model open
    document.querySelector("#sdd-user-btn").addEventListener("click", () => {
      const editModal = new bootstrap.Modal(
        document.getElementById("AddUserModal")
      );
      editModal.show();
    });

    // add user data
    document.querySelector('#AddUserForm').addEventListener('submit', async function (e) {
      e.preventDefault()

      const formdata = new FormData(this);

      const res = await fetch(
        API_URL,
        {
          method: 'POST',
          body: formdata
        })

      if (res.ok) {
        this.reset()
        // Get the shown modal instance and hide it
        const modalEl = document.getElementById("AddUserModal");
        const modalInstance = bootstrap.Modal.getInstance(modalEl);
        if (modalInstance) modalInstance.hide();
        FetchData()
      } else {
        console.error("Failed to submit student form");
      }

    })

    // wiew single userdata
    const ViewStudentData = async (id) => {
      try {
        const viewModal = new bootstrap.Modal(document.getElementById("viewUserModal"));
        viewModal.show();

        const res = await fetch(`${API_URL}/${id}`);
        const data = await res.json();

        // Set user data into modal fields
        document.querySelector('#viewProfilePic').src = `/uploads/${data.profile_pic}`;
        document.getElementById('viewFirstName').textContent = data.first_name;
        document.getElementById('viewLastName').textContent = data.last_name;
        document.getElementById('viewEmail').textContent = data.email;
        document.getElementById('viewPhone').textContent = data.phone;
        document.getElementById('viewGender').textContent = data.gender;

      } catch (error) {
        console.error('Something went wrong:', error);
      }
    };

    //update users data 
    const EditStudentData = async (id) => {
      const res = await fetch(`${API_URL}/${id}`);
      const data = await res.json();

      // Populate form fields
      document.getElementById('updateUserId').value = data._id;
      document.getElementById('updateFirstName').value = data.first_name;
      document.getElementById('updateLastName').value = data.last_name;
      document.getElementById('updateEmail').value = data.email;
      document.getElementById('updatePhone').value = data.phone;
      document.getElementById('updateGender').value = data.gender;

      // Show modal
      const modal = new bootstrap.Modal(document.getElementById('updateUserModal'));
      modal.show();
    };
      //update users data  and save server
    document.querySelector('#updateUserForm').addEventListener('submit', async function (e) {
  e.preventDefault(); 

  const userId = document.querySelector('#updateUserId').value;
  const formData = new FormData(this); 

  try {
    if (userId) {
      const res = await fetch(`${API_URL}/${userId}`, {
        method: 'PUT',
        body: formData
      });

      const result = await res.json();

      if (res.ok) {
        const modal = bootstrap.Modal.getInstance(document.getElementById('updateUserModal'));
        modal.hide();
        FetchData()
      } else {
        alert(result.message || 'Update failed');
      }

    } else {
      alert('User ID not found');
    }
  } catch (error) {
    console.error(error);
    alert('Something went wrong while updating');
  }
});

  //  delet user data 
   const DeleteStudentData = async (id)=>{
    if(confirm('are you sore to delet this user')){
     await fetch(`${API_URL}/${id}`,{ method:"DELETE", })
     FetchData()
    }
   }

  //  search user data
    let SerchInput = document.getElementById('searchInput')
    SerchInput.addEventListener('input',()=>{
          FetchData(SerchInput.value)
    })

  </script>
</body>

</html>